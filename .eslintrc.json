{
  "extends": ["prettier"],
  "plugins": ["prettier", "react", "jsx-a11y", "import"],
  "parser": "babel-eslint",
  "rules": {
    "prettier/prettier": [
      "error",
      {
        "trailingComma": "all"
      }
    ],
    "object-curly-spacing": 0,
    "no-unneeded-ternary": 0,
    "no-underscore-dangle": 0,
    "spaced-comment": 0,
    "no-undef": 0,
    "import/no-unresolved": 0,
    "import/extensions": 0,
    "react/forbid-prop-types": 0,
    "react/prop-types": 0,
    "arrow-parens": 0,
    "react/jsx-tag-spacing": 0,
    "consistent-return": 0,
    "no-param-reassign": 0,
    "no-new": 0,
    "no-plusplus": 0,
    "no-unused-expressions": 0,
    "radix": 0,
    "jsx-a11y/click-events-have-key-events": 0,
    "jsx-a11y/no-static-element-interactions": 0,
    "jsx-a11y/no-noninteractive-element-interactions": 0,
    "array-callback-return": 0,
    "import/no-extraneous-dependencies": 0,
    "max-len": 0,

    "no-nested-ternary": 0,
    "arrow-body-style": 0,
    "curly": ["error", "all"],
    "class-methods-use-this": 0,
    "brace-style": "error",
    "default-case": ["error", { "commentPattern": "^default\\sis\\sredundant" }],
    "key-spacing": "error",
    "keyword-spacing": ["error", { "before": true, "after": true }],
    "no-constant-condition": "error",
    "no-continue": 0,
    "no-else-return": ["error", { "allowElseIf": true }],
    "no-restricted-syntax": [
      "error",
      {
        "selector": "LabeledStatement",
        "message": "Labels are a form of GOTO; using them makes code confusing and hard to maintain and understand."
      },
      {
        "selector": "WithStatement",
        "message": "`with` is disallowed in strict mode because it makes code impossible to predict and optimize."
      }
    ],
    "no-shadow": "warn",
    "no-trailing-spaces": "error",
    "no-useless-escape": 0,
    "one-var": ["error", "never"],
    "padded-blocks": ["error", "never"],
    "padding-line-between-statements": ["error", { "blankLine": "always", "prev": "*", "next": "return" }],
    "prefer-destructuring": 0,
    "rest-spread-spacing": ["error", "never"],

    "import/prefer-default-export": 0,

    "react/no-array-index-key": 0,
    "react/prefer-stateless-function": 0,
    "react/prefer-es6-class": ["error", "always"],
    "react/require-default-props": 0,

    "react/sort-comp": [
      "error",
      {
        "order": ["static-methods", "lifecycle", "everything-else", "private", "listeners", "rendering"],
        "groups": {
          "lifecycle": [
            "displayName",
            "propTypes",
            "defaultProps",
            "contextTypes",
            "childContextTypes",
            "mixins",
            "statics",
            "state",
            "getDefaultProps",
            "getDerivedStateFromProps",
            "getInitialState",
            "constructor",
            "getChildContext",
            "componentWillMount",
            "UNSAFE_componentWillMount",
            "componentDidMount",
            "componentWillReceiveProps",
            "UNSAFE_componentWillReceiveProps",
            "shouldComponentUpdate",
            "componentWillUpdate",
            "UNSAFE_componentWillUpdate",
            "getSnapshotBeforeUpdate",
            "componentDidUpdate",
            "componentDidCatch",
            "componentWillUnmount"
          ],
          "rendering": ["/^render.+$/", "render"],
          "listeners": ["/^_on[A-Z]\\w*$/", "/^_onRef[A-Z]\\w*$/"],
          "private": ["/^_\\w+"]
        }
      }
    ],

    "react/jsx-handler-names": [
      "error",
      {
        "eventHandlerPrefix": "_on",
        "eventHandlerPropPrefix": "(on|ref|inner)"
      }
    ],
    "react/jsx-key": "error",

    "jsx-a11y/label-has-associated-control": 0,
    "jsx-a11y/label-has-for": 0,
    "react/destructuring-assignment": 0,
    "react/jsx-filename-extension": 0,
    "react/default-props-match-prop-types": ["error", { "allowRequiredDefaults": true }],
    "no-return-assign": ["error", "always"],
    "no-lonely-if": "error",
    "import/order": ["error", { "groups": [["builtin", "external", "internal"]] }],
    "no-console": 0
  }
}
